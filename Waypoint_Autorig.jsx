// Rig for Athena Demosfunction BuildUI(thisObj) {    var win = thisObj instanceof Panel ? thisObj : new Window("palette", "AutoRig", undefined, {        resizeable: true    });    win.layerRig = win.add("button", [10, 5, 150, 35], "Rig Layer");    win.layerRig.onClick = rigLayer;    win.lightRig = win.add("button", [155, 5, 300, 35], "Rig Dimmer");    win.lightRig.onClick = rigLight;}// Insantiate the user interfaceBuildUI(this);function rigLayer() {    //var inertialBounce = "n = 0; if (numKeys > 0){n = nearestKey(time).index;if (key(n).time > time){ n--; } } if (n == 0){ t = 0; }else{ t = time - key(n).time; } if (n > 0){ v = velocityAtTime(key(n).time - thisComp.frameDuration/10); amp = .05; freq = 4.0; decay = 2.0; value + v*amp*Math.sin(freq*t*2*Math.PI)/Math.exp(decay*t); }else{ value; }"    app.beginUndoGroup("Rig");    var curComp = app.project.activeItem;    var selLayers = curComp.selectedLayers;    if (selLayers.length < 2) {        alert("Please select the control layer, then layers to be controlled");        return;    }    var ctrlLayer = selLayers[0];    if (ctrlLayer.property("Effects")("Global Extrusion Depth") == undefined) {        var extrude = ctrlLayer.property("Effects").addProperty("ADBE Slider Control");        extrude.name = "Global Extrusion Depth";    } else {        var extrude = ctrlLayer.effect("Global Extrusion Depth");    }for (var i = 1; i < selLayers.length; i++) {        var effectName = selLayers[i].name + " Extrude";        var sliderControl = ctrlLayer.property("Effects").addProperty("ADBE Slider Control");        sliderControl.name = effectName;        //sliderControl.property("Slider").expression = inertialBounce;        var exp1 = "x = thisProperty[0]; y = thisProperty[1]; zInit = thisProperty[2]; ctrl = thisComp.layer(\" + String(selLayers[0].name) + "\").effect(\"" + String(effectName) + "\")(\"Slider\"); extrusion = thisComp.layer(\"" + String(selLayers[0].name) + "\").effect(\"Global Extrusion Depth\")(\"Slider\"); zFinal = linear(ctrl, 0, 100, 0, extrusion); [x, y, zInit-zFinal];"        selLayers[i].property("position").expression = (String(exp1));    }    app.endUndoGroup();}function rigLight() {    app.beginUndoGroup("Rig Dimmer");    var curComp = app.project.activeItem;    // Create the ambient Light    var ambLight = curComp.layers.addLight("Ambient Light", [0, 0]);    ambLight.position.setValue([curComp.width / 2, curComp.height / 2, 500]);    ambLight.lightType = LightType.AMBIENT;    // Create the point light    var pntLight = curComp.layers.addLight("Point Light", [0, 0]);    pntLight.position.setValue([curComp.width / 2, curComp.height / 2, -500]);    pntLight.lightType = LightType.POINT;    // The Point light must cast shadows    pntLight.lightOption.castsShadows.setValue(1);    // Up the shadow diffusion    pntLight.lightOption.shadowDiffusion.setValue(100.0);    // Set up the dimmer     dimmerSetup(curComp);    // Now that the dimmer is set up, create the expressions on the lights.    pntLight.lightOption.intensity.expression = "linear(thisComp.layer(\"Dimmer CTRL\").effect(\"Dimmer\")(\"Slider\"), 0, 100, 0, 150)"    ambLight.lightOption.intensity.expression = "linear(thisComp.layer(\"Dimmer CTRL\").effect(\"Dimmer\")(\"Slider\"), 0, 100, 100, 0)"    app.endUndoGroup();}function dimmerSetup(curComp) {    // Check for Dimmer Layer    var dimmerPresent = false;    var dimmerLayer = null;    var dimmerSlider = null;    for (var i = 1; i < curComp.numLayers + 1; i++) {        if (curComp.layer(i).name == "Dimmer CTRL") {            dimmerPresent = true;            dimmerLayer = curComp.layer(i);            // Try to find the dimmer slider             try {                dimmerSlider = dimmerLayer.effect("Dimmer")("Slider")            }            // If it doesn't exist, add the slider             catch (err) {                dimmerSlider = curComp.layer(i)("Effects").addProperty("ADBE Slider Control");                // Reassign to access the actual slider                 dimmerSlider.name = "Dimmer";                dimmerSlider = curComp.layer(i).effect("Dimmer")("Slider");                // Clamp the range                dimmerSlider.expression = "clamp(thisProperty, 0,100);"            }            break;        }    }    // Make the dimmer if it doesn't already exist    if (dimmerLayer == null) {        dimmerLayer = curComp.layers.addNull();        dimmerLayer.name = "Dimmer CTRL";        // Create an effect slider        dimmerSlider = dimmerLayer.property("Effects").addProperty("ADBE Slider Control");        dimmerSlider.name = ("Dimmer")        // Reassign the variable to grab tha actual slider        dimmerSlider = dimmerSlider.property("Slider");        // Clamp the range        dimmerSlider.expression = "clamp(thisProperty, 0,100);"    }}